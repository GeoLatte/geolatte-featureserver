# This is the main configuration file for the application.
# ~~~~~

# We set a high value for iteratee-threadpool because we use
# Enumerator.fromStream() with a slow InputStream (see ScalaDoc for that method)
# -- not used in Reactive Mongo
#iteratee-threadpool-size=200

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="f34157f106f04ef14d8f7ef68e4ae511-16tvg8133k76o13p66efffrdhi9jqocav92icv0vl3frnghvjh3g"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# Default to Routes in the root package.
# application.routers=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

fs.dbs = ["test", "test2", "tiger"]

# Akka config
play {
  akka {
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = WARNING
    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-min = 2
          parallelism-max = 4
        }
      }
      stream-dispatcher = {
            fork-join-executor {
              parallelism-factor = 20.0
              parallelism-max = 200
            }
        }
    }
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
#logger=OFF
#logger.root=OFF

# Logger used by the framework:
#logger.play=OFF

# Logger provided to your application:
#logger.application=OFF



